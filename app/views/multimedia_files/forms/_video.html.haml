- _url = @multimedia_file.persisted? ? multimedia_file_path(@multimedia_file) : multimedia_files_path
= form_for @multimedia_file, url: _url, html: { class: "form form-horizontal video" } do |f|
  = hidden_field_tag :type, @multimedia_file.type
  .form-group
    = f.label :title, class: 'control-label'
    .controls
      = f.text_field :title, class: 'form-control', required: true
    - if has_errors?(f.object, :title)
      %p.text-danger
        = get_errors_for(f.object, :title)
  .form-group
    = f.label :album_id, class: 'control-label'
    .controls
      = f.select :album_id, options_for_select(@albums.collect{|a| [a[:title], a[:id]]}, @multimedia_file.album_id), {include_blank: false}, class: 'form-control', required: true
    - if has_errors?(f.object, :album_id)
      %p.text-danger
        = get_errors_for(f.object, :album_id)
  .form-group
    = f.label :description, class: 'control-label'
    .controls
      = f.text_area :description, class: 'form-control'
    - if has_errors?(f.object, :description)
      %p.text-danger
        = get_errors_for(f.object, :description)
  .form-group
    = f.label :provider, class: 'control-label'
    .controls
      = f.hidden_field :provider
      = text_field_tag :provider_placeholder, @multimedia_file.provider, class: 'form-control', required: true, disabled: true
    - if has_errors?(f.object, :provider)
      %p.text-danger
        = get_errors_for(f.object, :provider)
  .form-group
    = f.label :url, class: 'control-label'
    .controls
      = f.text_field :url, class: 'form-control', required: true
    - if has_errors?(f.object, :url)
      %p.text-danger
        = get_errors_for(f.object, :url)
    - else
      %p.text-info
        = "Allowed providers: #{MultimediaFile::Video::PROVIDERS.join(', ')}"
    .multimedia-files{style: "margin-top: 15px;"}
      - if @multimedia_file.persisted?
        .multimedia-file
          .video-thumb{data:{id: @multimedia_file.video_id, provider: @multimedia_file.provider}}
      - else
        .multimedia-file{style: "display: none"}
          .video-thumb

  = f.submit nil,class: 'btn btn-primary'
  = link_to t('.cancel', :default => t("helpers.links.cancel")), :back, :class => 'btn btn-default'

:javascript
  if(!window.MultimediaFile) window.MultimediaFile = {};
  window.MultimediaFile.providers = #{MultimediaFile::Video::PROVIDERS.inspect};
  window.MultimediaFile.regexp = {}
- MultimediaFile::Video::PROVIDERS.each do |provider|
  :javascript
    window.MultimediaFile.regexp.#{provider} = #{MultimediaFile::Video.regexp(provider).inspect};
